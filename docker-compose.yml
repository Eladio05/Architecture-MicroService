version: "3.8"

services:
  db:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    networks:
      - app-network

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  cloudconfig:
    build:
      context: .
      dockerfile: CloudConfig/Dockerfile
    ports:
      - "8888:8888"
    networks:
      - app-network
    healthcheck:
      test: curl --fail --silent http://cloudconfig:8888/produit/default | grep 'produit' || exit 1
      interval: 10s
      timeout: 2s
      retries: 10

  produit:
    build:
      context: .
      dockerfile: microservice/produit/Dockerfile
    ports:
      - "8095:8095"
    depends_on:
      cloudconfig:
        condition: service_healthy
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://cloudconfig:8888"
    networks:
      - app-network
  
  paiement:
    build:
      context: .
      dockerfile: microservice/Paiement/Dockerfile
    ports:
      - "8096:8096"
    depends_on:
      cloudconfig:
        condition: service_healthy
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://cloudconfig:8888"
    networks:
      - app-network

  client:
    build:
      context: .
      dockerfile: microservice/client/Dockerfile
    ports:
      - "8097:8097"
    depends_on:
      cloudconfig:
        condition: service_healthy
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://cloudconfig:8888"
    networks:
      - app-network
    
  commande:
    build:
      context: .
      dockerfile: microservice/Commande/Dockerfile
    ports:
      - "8098:8098"
    depends_on:
      cloudconfig:
        condition: service_healthy
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://cloudconfig:8888"
    networks:
      - app-network

  eureka:
    build:
      context: .
      dockerfile: Eureka/Dockerfile
    ports:
      - "8761:8761"
    networks:
      - app-network
  
  zuul:
    build:
      context: .
      dockerfile: Zuul/Dockerfile
    ports:
      - "9005:9005"
    depends_on:
      - eureka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
